version: ""

formatter: markdown table

name: terraform-aws-multiaccount-pipeline

content: |-
  # terraform-aws-multiaccount-pipeline

  [StratusGrid/terraform-aws-multiaccount-pipeline](https://github.com/StratusGrid/terraform-aws-multiaccount-pipeline)

  ## Terraform module to create a CICD pipeline for Terraform which can execute from a Production or CICD account across multiple sub-accounts which each contain a specific environment.

  ---

  ## Cross-Account Role Assumption

  In order for the CodePipeline's CodeBuild stages to properly function in each account/environment, an IAM role must be created in each account which the CodeBuilds can assume. Thus, you should:

  - Create an IAM role in each account
  - The IAM role name must be specified in the `cb_accounts_map` input
  - The IAM role must have an attached policy with appropriate permissions (consider using [restricted-admin](https://github.com/StratusGrid/terraform-aws-iam-group-restricted-admin) rights)
  - Establish trust relationships to allow the CICD account to assume that role
  - Provide the CodeBuild execution roles with STS Assume role rights for that role
  
  This role's name is defined in the `cb_accounts_map` input. The listed role works assuming you remove the sts:AssumeRole deny.

  An example policy to this is located [here](IAM-POLICY.md).

  ## Slack and AWS ChatBot Integration

  This module comes with a native AWS Chatbot integration hook, to enable this follow the below steps,
  1. Simply set `slack_notification_for_approval` to true and fill out your Workspace ID and Channel ID.
  2. Install the [AWS Chatbot](https://stratusgrid.slack.com/apps/A6L22LZNH-aws-chatbot) app into the Slack Workspace and the channel if it's a private channel.
  3. Navigate to the AWS Chatbot Service in the AWS Console and authorize the Slack Workspace.
  4. It may fail to deploy the first time due to an underlying AWS config replication, if it does wait up to 15 minutes as the error message states.

  ## Notes
  - This module assumes that the Terraform state file is located in the account that you will be acting in. It has NOT been tested with cross account state file.
  - This module is designed to work from a tooling account and access destination accounts with the rights granted to it by cross-account IAM roles. In theory, it could run from a single account with another role. This has NOT been tested.
  - This module can pull in code via either an AWS CodeStar connection or an artifact in an S3 bucket.
  - If using Git as a source, an AWS CodeStar connection is required. When creating the AWS CodeStar connection, any account can authenticate to the provider. It will create a global token and not one linked to the named user.
  - If using S3 as a source, the bucket must have versioning enabled.

  ---

  ## Example with Git Source

  ```hcl
  {{ include "examples/git.tfnot" }}
  ```


  ## Example with S3 Source

  ```hcl
  {{ include "examples/s3.tfnot" }}
  ```

  ---

  {{ .Requirements }}

  {{ .Resources }}

  {{ .Inputs }}

  {{ .Outputs }}

  ---

  ## Regarding CodeStar Connections for GitHub integration

  A Codestar connection will be created in the "pending" state and must then be manually activated/confirmed in the management console. The ARN for the confirmed connection must be entered in the module variables to provide the necessary connection.

  ## Example CodeStar Connection resource

  ```hcl
  resource "aws_codestarconnections_connection" "test_repo" { 
    name = "test-cicd-connection" 
    provider_type = "GitHub"
  }
  ```

  ## Contributors
  - Christopher Childress [chrischildresssg](https://github.com/chrischildresssg)
  - Ivan Casco [ivancasco-sg](https://github.com/ivancasco-sg)
  - Wesley Kirkland [wesleykirklandsg](https://github.com/wesleykirklandsg)
  - Max Rahimi [maxr-sg](https://github.com/maxr-sg)

  <span style="color:red">Note:</span> Manual changes to the README will be overwritten when the documentation is updated. To update the documentation, run `terraform-docs -c .config/.terraform-docs.yml .`

sections:
  show:
    - resources
    - inputs
    - outputs
    - providers
    - requirements

sort:
  enabled: true
  by: name

output:
  file: README.md
  mode: replace
